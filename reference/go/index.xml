<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go Reference on Protocol Buffers Documentation</title><link>https://protobuf.dev/reference/go/</link><description>Recent content in Go Reference on Protocol Buffers Documentation</description><generator>Hugo</generator><language>en</language><atom:link href="https://protobuf.dev/reference/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Generated Code Guide</title><link>https://protobuf.dev/reference/go/go-generated/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/reference/go/go-generated/</guid><description>Any differences between proto2 and proto3 generated code are highlighted - note that these differences are in the generated code as described in this document, not the base API, which are the same in both versions. You should read the proto2 language guide and/or the proto3 language guide before reading this document.
Compiler Invocation The protocol buffer compiler requires a plugin to generate Go code. Install it using Go 1.16 or higher by running:</description></item><item><title>Go FAQ</title><link>https://protobuf.dev/reference/go/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/reference/go/faq/</guid><description>Versions What&amp;rsquo;s the difference between github.com/golang/protobuf and google.golang.org/protobuf? The github.com/golang/protobuf module is the original Go protocol buffer API.
The google.golang.org/protobuf module is an updated version of this API designed for simplicity, ease of use, and safety. The flagship features of the updated API are support for reflection and a separation of the user-facing API from the underlying implementation.
We recommend that you use google.golang.org/protobuf in new code.
Version v1.4.0 and higher of github.</description></item><item><title>Go Size Semantics</title><link>https://protobuf.dev/reference/go/size/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/reference/go/size/</guid><description>The proto.Size function returns the size in bytes of the wire-format encoding of a proto.Message by traversing all its fields (including submessages).
In particular, it returns the size of how Go Protobuf will encode the message.
Typical usages Identifying empty messages Checking if proto.Size returns 0 is an easy way to recognize empty messages:
if proto.Size(m) == 0 { // No fields set (or, in proto3, all fields matching the default); // skip processing this message, or return an error, or similar.</description></item><item><title>Go API</title><link>https://protobuf.dev/reference/go/api-docs-link/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/reference/go/api-docs-link/</guid><description/></item></channel></rss>